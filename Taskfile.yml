version: "3"

dotenv:
  - .env

env:
  DOCKER_REGISTRY: 513974440343.dkr.ecr.us-east-1.amazonaws.com
  NODE_ENV: '{{default "development" .NODE_ENV}}'

includes:
  diff-engine:
    taskfile: workspaces/diff-engine/Taskfile.yml
  util:
    taskfile: taskfiles/util/Taskfile.yml
  ui:
    taskfile: workspaces/ui/Taskfile.yml
    dir: workspaces/ui
  regression:
    taskfile: taskfiles/regression-tests/Taskfile.yml
  release:
    taskfile: taskfiles/release/Taskfile.yml
  release:side-channel:
    taskfile: taskfiles/release/side-channel/Taskfile.yml
  verdaccio:
    taskfile: docker/private-npm-registry/Taskfile.yml
    dir: docker/private-npm-registry

tasks:
  workspaces:setup:
    env:
      OPTIC_SKIP_PREBUILT_INSTALLS: "true"
    cmds:
      - |
        # add rust env to path
        source $HOME/.profile
        yarn install

  workspaces:build:
    desc: Build Yarn workspaces
    vars:
      FLAGS_FILE: '{{.FLAGS_FILE}}'
    deps:
      - task: workspaces:setup
    cmds:
      - |
        # add rust env to path
        source $HOME/.profile

        if [[ -n "$FLAGS_FILE" ]]; then
          echo "Feature flags found ($FLAGS_FILE), copying to packages for build and runtime."
          cp $FLAGS_FILE .env
          cp $FLAGS_FILE workspaces/agent-cli/.env
          cp $FLAGS_FILE workspaces/ci-cli/.env
          cp $FLAGS_FILE workspaces/local-cli/.env
          cp $FLAGS_FILE workspaces/cli-server/.env
          cp $FLAGS_FILE workspaces/cli-scripts/.env
          cp $FLAGS_FILE workspaces/diff-engine/.env
          cp $FLAGS_FILE workspaces/ui/.env.production.local
        fi
        yarn wsrun --stages --report --fast-exit --exclude-missing ws:build
    generates:
      - workspaces/diff-engine-wasm/lib/**/*
      - workspaces/diff-engine-wasm/engine/browser/**/*
      - workspaces/diff-engine-wasm/engine/build/**/*
      - workspace/diff-engine-wasm/engine/target/**/*
      - workspaces/*/build/**/*

  workspaces:build:ci:
    desc: CI workflow
    cmds:
      - task: workspaces:setup
      - task: workspaces:clean
      - task: workspaces:build
      - task: flush-to-disk

  workspaces:clean:
    desc: Remove previous build artifacts
    cmds:
      - yarn wsrun --stages --report --fast-exit ws:clean

  spec:build:
    dir: workspaces/ui
    env:
      PUBLIC_URL: "https://apidocs.o3c.info"
      CI: "false"
    cmds:
      - yarn build-spec

  npm:publish:
    deps:
      - workspaces:build
    env:
      OPTIC_SKIP_PREBUILT_INSTALLS: "false"
    cmds:
      - yarn install

  flush-to-disk:
    cmds:
      - sudo /usr/sbin/purge
    status:
      - uname -a | grep -qv Darwin

  docker:slack-notifier:
    desc: Posts a message to Slack
    summary: |
      Posts a docker build announcement to Slack. To disable announcements
      unset SLACK_WEBHOOK.

      Expected env:
        * REPO — the Docker image repository
        * SLACK_WEBHOOK — a Slack webhook URL
        * TAG — the Docker image tag
        * USER — the user to direct the message at
    vars:
      MESSAGE: "{{.USER}}: `{{.REPO}}:{{.TAG}}` was pushed to our Docker registry."
    env:
      DATA: '{"text":"{{.MESSAGE}}"}'
    cmds:
      - echo $DATA
      - 'curl -X POST -H "Content-type: application/json" --data "$DATA" $SLACK_WEBHOOK'
    status:
      - test -z $SLACK_WEBHOOK
